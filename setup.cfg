[metadata]
name = irispy-lmsal
author = IRIS Instrument Team
author_email =
license = BSD 3-Clause
license_file = LICENSE.rst
url = https://gitlab.com/LMSAL_HUB/iris_hub/irispy-lmsal
description = A Python package that provides the tools to read in and analyze data from the IRIS solar-observing satellite.
long_description = file: README.rst
long_description_content_type = text/x-rst

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires =
    sunraster
    sunpy

[options.extras_require]
tests =
    tox
    pytest-astropy
docs =
    sphinx
    sphinx-automodapi
    towncrier
    sunpy-sphinx-theme

[options.package_data]
irispy.data =  test/*, test/*/*
irispy = data/*

[tool:pytest]
testpaths = "irispy" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = -p no:warnings -ra --doctest-rst
remote_data_strict = True

[isort]
balanced_wrapping = True
default_section = THIRDPARTY
include_trailing_comma = True
known_sunraster = sunraster
known_first_party = irispy
length_sort = False
length_sort_stdlib = True
line_length = 110
multi_line_output = 3
no_lines_before = LOCALFOLDER
not_skip = __init__.py
sections = FUTURE, STDLIB, THIRDPARTY, SUNRASTER, FIRSTPARTY, LOCALFOLDER

[pycodestyle]
max_line_length = 120

[flake8]
max-line-length = 120
exclude =
    .git,
    __pycache__,
    docs/conf.py,
    build,
    irispy/data/sample.py,
    irispy/extern/**,
rst-directives =
    plot

[coverage:run]
omit =
  irispy/conftest.py
  irispy/*setup_package*
  irispy/tests/*
  irispy/*/tests/*
  irispy/extern/*
  irispy/version*
  */irispy/conftest.py
  */irispy/*setup_package*
  */irispy/tests/*
  */irispy/*/tests/*
  */irispy/extern/*
  */irispy/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
